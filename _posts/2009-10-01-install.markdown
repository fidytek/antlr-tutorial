---
layout: post
title: Instalacja w trzech krokach
---

<blockquote>
<img src="../../../../images/antlr.png" alt="[ANTLR]" />
</blockquote>

# {{ page.title }}

1\. Ze strony [ANTLR Downloads] [downloads]
pobieramy ostatnie wersje programów
*ANTLR* i *ANTLRWorks*:

* [ANTLRWorks v1.3](http://www.antlr.org/download/antlrworks-1.3.jar)
  \(Version 1.3 — for Windows, Linux and Mac OS X\)
* [ANTLR v3.2](http://www.antlr.org/download/antlr-3.2.jar)
  \(Complete ANTLR 3.2 jar; all tools, runtime, etc…\)

Ściągnięte pliki JAR kopiujemy do katalogu */usr/local/antlr/*

{% highlight bash %}
$ sudo mkdir -p /usr/local/antlr/
$ sudo cp antlrworks-1.3.jar antlr-3.2.jar \
    /usr/local/antlr/
{% endhighlight %}

W pliku */etc/profile.d/local.sh*, pamiętając o wpisaniu aktualnych
wersji w ścieżkach, dopisujemy:

{% highlight bash %}
export CLASSPATH="/usr/local/antlr/antlr-3.2.jar:."
{% endhighlight %}

(W Fedorze 11 zmienna *CLASSPATH*  nie jest ustawiona.)

2\. Instalujemy ANTLRWorks, czyli
[The ANTLR GUI Development Environment] [antlrworks].
Program ten uruchamiamy z lini poleceń w następujący sposób:

{% highlight bash %}
$ java -jar /usr/local/antlr/antlrworks-1.3.jar
{% endhighlight %}

Ponieważ nie jest to wygodne, to ułatwimy sobie uruchamianie
programu dopisując alias do pliku *~/.bashrc*:

{% highlight bash %}
alias antlrworks='java -jar /usr/local/antlr/antlrworks-1.3.jar'
{% endhighlight %}

3\. Standardowa dystrybucja Emacsa v23 zawiera plik *antlr-mode.el*.
Oznacza to, że po wczytaniu pliku z rozszerzeniem *.g* Emacs zmienia tryb na
[ANTLR.Java] [emacs-antlr].  Dlatego w tym kroku nic nie musimy
robić, o ile mamy zainstalowaną ostatnią wersję Emacsa.


## Testowanie instalacji

Do testowania instalacji użyjemy pliku *T.g* zawierającego taką oto
gramatykę:

{% highlight antlr-java %}
grammar T;
/** Match things like "call foo;" */
r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
ID: 'a'..'z'+ ;
WS: (' '|'\n'|'\r')+   {$channel=HIDDEN;} ; // ignore whitespace
{% endhighlight %}

Gramatykę z pliku *T.g* kompilujemy tak:

{% highlight bash %}
$ java org.antlr.Tool T.g  # => TLexer.java TParser.java T.tokens
{% endhighlight %}

Do testowania gramatyki użyjemy programu *Test.java* wywołującego regułę początkową
`r` tej gramatyki i czytającego tekst ze *stdin*:

{% highlight java %}
import org.antlr.runtime.*;
public class Test {
    public static void main(String[] args) throws Exception {
        // create a CharStream that reads from standard input
        ANTLRInputStream input = new ANTLRInputStream(System.in);
        // create a lexer that feeds off of input CharStream
        TLexer lexer = new TLexer(input);
        // create a buffer of tokens pulled from the lexer
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        // create a parser that feeds off the tokens buffer
        TParser parser = new TParser(tokens);
        // begin parsing at rule r
        parser.r();
    }
}
{% endhighlight %}

Po tych przygotowaniach, kompilujemy program *Test.java*
(wygenerowane pliki *\*.class* zostaną umieszczone w katalogu
*classes*), przechodzimy do katalogu *classes* skąd
uruchamiamy skompilowany program:

{% highlight bash %}
$ mkdir -p classes
$ javac -d classes Test.java TLexer.java TParser.java
$ cd classes
$ java Test
call foo ;
... wciskamy ctrl+d ...
invoke foo
{% endhighlight %}


## Fedora

Jawę instalujemy z poniższych rpm-ów:

    java-1.6.0-openjdk 
    java-1.6.0-openjdk-devel

Do czego potrzebny jest rpm *chkconfig*. 
Zobacz strona manuala *update-alternatives*.


<!-- Linki -->

[downloads]: http://www.antlr.org/download.html "ANTLR Downloads"
[antlrworks]: http://www.antlr.org/works "The ANTLR GUI Development Environment"
[emacs-antlr]: http://antlr-mode.sourceforge.net/details.html "ANTLR mode for Emacs"
